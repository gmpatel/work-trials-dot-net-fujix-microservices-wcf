/*
Deployment script for FXA.DPSE.DB.PaymentInstruction

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "FXA.DPSE.DB.PaymentInstruction"
:setvar DefaultFilePrefix "FXA.DPSE.DB.PaymentInstruction"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Account]...';


GO
CREATE TABLE [dbo].[Account] (
    [Id]            BIGINT        IDENTITY (1, 1) NOT NULL,
    [AccountNumber] NVARCHAR (50) NOT NULL,
    [BSBCode]       NVARCHAR (6)  NOT NULL,
    [AccountType]   NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Account] PRIMARY KEY CLUSTERED ([Id] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[AccountName]...';


GO
CREATE TABLE [dbo].[AccountName] (
    [AccountId]   BIGINT         NOT NULL,
    [AccountName] NVARCHAR (100) NOT NULL,
    CONSTRAINT [PK_AccountName] PRIMARY KEY CLUSTERED ([AccountId] ASC, [AccountName] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ClientSession]...';


GO
CREATE TABLE [dbo].[ClientSession] (
    [Id]            BIGINT         IDENTITY (1, 1) NOT NULL,
    [SessionId]     NVARCHAR (60)  NOT NULL,
    [UserId1]       NVARCHAR (50)  NOT NULL,
    [UserId2]       NVARCHAR (50)  NULL,
    [DeviceId]      NVARCHAR (100) NULL,
    [IpAddressV4]   NVARCHAR (50)  NULL,
    [IpAddressV6]   NVARCHAR (50)  NULL,
    [ClientName]    NVARCHAR (50)  NULL,
    [ClientVersion] NVARCHAR (50)  NULL,
    [OS]            NVARCHAR (50)  NULL,
    [OSVersion]     NVARCHAR (50)  NULL,
    [CaptureDevice] NVARCHAR (50)  NULL,
    CONSTRAINT [PK_ClientSession] PRIMARY KEY CLUSTERED ([Id] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[PaymentInstruction]...';


GO
CREATE TABLE [dbo].[PaymentInstruction] (
    [Id]                            BIGINT         IDENTITY (1, 1) NOT NULL,
    [TotalTransactionAmountInCents] INT            NOT NULL,
    [ChannelType]                   NVARCHAR (20)  NOT NULL,
    [ChequeCount]                   INT            NOT NULL,
    [TransactionNarrative]          NVARCHAR (100) NOT NULL,
    [TrackingId]                    NVARCHAR (20)  NOT NULL,
    [ClientSessionId]               BIGINT         NOT NULL,
    [AccountId]                     BIGINT         NOT NULL,
    [ProcessingDateTime]            DATETIME       NULL,
    [BatchNumber]                   NVARCHAR (8)   NULL,
    [BatchPath]                     NVARCHAR (255) NULL,
    [BatchCreatedDateTime]          DATETIME       NULL,
    [TransportedDateTime]           DATETIME       NULL,
    [CreatedDateTime]               DATETIME       NOT NULL,
    [Status]                        NVARCHAR (10)  NOT NULL,
    CONSTRAINT [PK_PaymentInstruction] PRIMARY KEY CLUSTERED ([Id] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[Voucher]...';


GO
CREATE TABLE [dbo].[Voucher] (
    [Id]                   BIGINT        IDENTITY (1, 1) NOT NULL,
    [PaymentInstructionId] BIGINT        NOT NULL,
    [TrackingId]           NVARCHAR (20) NOT NULL,
    [SequenceId]           INT           NOT NULL,
    [VoucherType]          NVARCHAR (6)  NOT NULL,
    [TransactionCode]      NVARCHAR (3)  NOT NULL,
    [AuxDom]               NVARCHAR (20) NOT NULL,
    [ProcessingDateTime]   DATETIME      NOT NULL,
    [BSB]                  NVARCHAR (6)  NOT NULL,
    [AccountNumber]        NVARCHAR (20) NOT NULL,
    [AmountInCents]        INT           NOT NULL,
    [IsNonPostingCheque]   BIT           NOT NULL,
    CONSTRAINT [PK_Voucher] PRIMARY KEY CLUSTERED ([Id] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[VoucherImage]...';


GO
CREATE TABLE [dbo].[VoucherImage] (
    [VoucherId]     BIGINT         NOT NULL,
    [FrontImage]    NVARCHAR (MAX) NOT NULL,
    [RearImage]     NVARCHAR (MAX) NOT NULL,
    [FrontImageSHA] NVARCHAR (MAX) NOT NULL,
    [RearImageSHA]  NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [PK_VoucherImage] PRIMARY KEY CLUSTERED ([VoucherId] ASC) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AccountName]') AND name = N'IX_AccountId')
CREATE NONCLUSTERED INDEX [IX_AccountId] ON [dbo].[AccountName]
(
	[AccountId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_PaymentInstruction_AccountId]    Script Date: 13/10/2015 6:14:01 PM ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PaymentInstruction]') AND name = N'IX_PaymentInstruction_AccountId')
CREATE NONCLUSTERED INDEX [IX_PaymentInstruction_AccountId] ON [dbo].[PaymentInstruction]
(
	[AccountId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_PaymentInstruction_ClientSessionId]    Script Date: 13/10/2015 6:14:01 PM ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PaymentInstruction]') AND name = N'IX_PaymentInstruction_ClientSessionId')
CREATE NONCLUSTERED INDEX [IX_PaymentInstruction_ClientSessionId] ON [dbo].[PaymentInstruction]
(
	[ClientSessionId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_Voucher_PaymentInstructionId]    Script Date: 13/10/2015 6:14:01 PM ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Voucher]') AND name = N'IX_Voucher_PaymentInstructionId')
CREATE NONCLUSTERED INDEX [IX_Voucher_PaymentInstructionId] ON [dbo].[Voucher]
(
	[PaymentInstructionId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_PaymentInstruction_CreateDateTime]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PaymentInstruction] ADD  CONSTRAINT [DF_PaymentInstruction_CreateDateTime]  DEFAULT (getdate()) FOR [CreatedDateTime]
END

GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_PaymentInstruction_Status]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PaymentInstruction] ADD  CONSTRAINT [DF_PaymentInstruction_Status]  DEFAULT (N'PENDING') FOR [Status]
END

GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_AccountName_Account]') AND parent_object_id = OBJECT_ID(N'[dbo].[AccountName]'))
ALTER TABLE [dbo].[AccountName]  WITH CHECK ADD  CONSTRAINT [FK_AccountName_Account] FOREIGN KEY([AccountId])
REFERENCES [dbo].[Account] ([Id])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_AccountName_Account]') AND parent_object_id = OBJECT_ID(N'[dbo].[AccountName]'))
ALTER TABLE [dbo].[AccountName] CHECK CONSTRAINT [FK_AccountName_Account]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PaymentInstruction_Account]') AND parent_object_id = OBJECT_ID(N'[dbo].[PaymentInstruction]'))
ALTER TABLE [dbo].[PaymentInstruction]  WITH CHECK ADD  CONSTRAINT [FK_PaymentInstruction_Account] FOREIGN KEY([AccountId])
REFERENCES [dbo].[Account] ([Id])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PaymentInstruction_Account]') AND parent_object_id = OBJECT_ID(N'[dbo].[PaymentInstruction]'))
ALTER TABLE [dbo].[PaymentInstruction] CHECK CONSTRAINT [FK_PaymentInstruction_Account]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PaymentInstruction_ClientSession]') AND parent_object_id = OBJECT_ID(N'[dbo].[PaymentInstruction]'))
ALTER TABLE [dbo].[PaymentInstruction]  WITH CHECK ADD  CONSTRAINT [FK_PaymentInstruction_ClientSession] FOREIGN KEY([ClientSessionId])
REFERENCES [dbo].[ClientSession] ([Id])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PaymentInstruction_ClientSession]') AND parent_object_id = OBJECT_ID(N'[dbo].[PaymentInstruction]'))
ALTER TABLE [dbo].[PaymentInstruction] CHECK CONSTRAINT [FK_PaymentInstruction_ClientSession]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Voucher_PaymentInstruction]') AND parent_object_id = OBJECT_ID(N'[dbo].[Voucher]'))
ALTER TABLE [dbo].[Voucher]  WITH CHECK ADD  CONSTRAINT [FK_Voucher_PaymentInstruction] FOREIGN KEY([PaymentInstructionId])
REFERENCES [dbo].[PaymentInstruction] ([Id])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Voucher_PaymentInstruction]') AND parent_object_id = OBJECT_ID(N'[dbo].[Voucher]'))
ALTER TABLE [dbo].[Voucher] CHECK CONSTRAINT [FK_Voucher_PaymentInstruction]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_VoucherImage_Voucher]') AND parent_object_id = OBJECT_ID(N'[dbo].[VoucherImage]'))
ALTER TABLE [dbo].[VoucherImage]  WITH CHECK ADD  CONSTRAINT [FK_VoucherImage_Voucher] FOREIGN KEY([VoucherId])
REFERENCES [dbo].[Voucher] ([Id])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_VoucherImage_Voucher]') AND parent_object_id = OBJECT_ID(N'[dbo].[VoucherImage]'))
ALTER TABLE [dbo].[VoucherImage] CHECK CONSTRAINT [FK_VoucherImage_Voucher]
GO
--ALTER DATABASE [DPSE_PaymentInstruction] SET  READ_WRITE 
--GO
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
